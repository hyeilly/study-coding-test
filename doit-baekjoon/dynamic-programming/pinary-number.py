# 이친수 구하기
# 이친수는 0으로 시작하지 않음
# 이친수에서는 1이 두 번 연속으로 나타나지 않음
# 1 1 을 부분 문자열로 가지지 않음
# 1 10 100 101 1000 1001 등이 이친수임
# 1 <= N <= 90 => N자리 이친수의 개수 구하기

# 자릿수 중요
# 0으로 끝나는 이친수, 1으로 끝나는 이친수 구분

# input 5 output 5

# N = int(input())
N = 5
dp = [[-1 for _ in range(N)] for _ in range(2)]
dp[0][0] = 0
dp[1][0] = 1
for d in dp:
    for j in range(1, N):
        dp[0][j] = dp[0][j - 1] + dp[1][j - 1]
        dp[1][j] = dp[0][j - 1]
count = dp[0][N-1] + dp[1][N-1]
print(count)
# 점화식 형태
# dp[i][0] i길이에서 끝이 0으로 끝나는 이친수의 개수
# dp[i][0] = dp[i-1][0] + dp[i-1][1]
# dp[i][1] i길이에서 끝이 1로 끝나는 이친수의 개수
# dp[i][1] = dp[i-1][0]
