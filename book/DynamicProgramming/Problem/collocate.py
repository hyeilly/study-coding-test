# 병사 배치하기
# 1<=N<=2000
# 각 병사 전투력 10,000,000보다 작거나 같은 자연수
# 첫째 줄에 남아있는 병사의 수가 최대가 되도록 하기 위해 열외시켜야 하는 병사의 수
# 가장 긴 감소하는 부분 수열 (LIS)
# => 입력받은 병사 정보의 순서를 뒤집고 가장 긴 증가하는 부분 수열 알고리즘 수행

# 가장 긴 증가하는 부분 수열
# D[i] = array[i]를 마지막 원소로 가지는 부분 수열의 최대 길이
# 앞에있는 원소가 뒤에있는 원소보다 더 작을 때에만 update
# 모든 0<=j<i에 대해 D[i] = max(D[i], D[j]+1) if array[j] < array[i]
# array = [4, 2, 5, 8, 4, 11, 15] => [4, 5, 8, 11, 15]

n = 7
array = [15, 11, 4, 6, 5, 2, 4]
array.reverse()

d = [1] * n
# d = [0] * 10000001

# 각 원소 하나만 이용해서 수열을 만든다 => 길이는 1이 됨
# 각 원소를 마지막 원소로 가지는
i = 0
for i in range(0, n):
    d[i] = 1
i = 1
print(f"{array[i]}를 마지막 원소로 가지는 수열의 최대 길이")
print(f"{array[i-1]}이 {array[i]}보다 크면 update X")


# 정답
for i in range(1, n):
    for j in range(0, i):
        if array[j] < array[i]:
            d[i] = max(d[i], d[j] + 1)
print(n - max(d))



