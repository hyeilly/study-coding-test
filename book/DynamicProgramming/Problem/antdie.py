# 3. 개미 전사
# 식량창고를 선택적으로 약탈.
# 최소 한 칸 이상 떨어진 식량창고를 약탈해야함
# 1, 3, 1, 5
# 두 번째 식량창고와 네 번째 식량창고를 선택했을 때 최댓값인 총 8개인 식량 빼앗기
# 첫째 줄에 식량창고 개수 N은 3<=N<=100
# 둘째 줄에 공백으로 구분되어 식량창고에 저장된 식량개수 0<=K<=1000
# 최적 부분 구조 - 특정 번째까지 최적의해
# 중복 부분 문제

n = 4
array = [1, 3, 1, 5]
# 경우의 수 8가지

d = [0] * 100

# 첫번째 위치까지의 얻을 수 있는 식량의 최댓값
# 첫번째 원소 그대로 가져오기
d[0] = array[0]
# 두번째 위치까지의 얻을 수 있는 식량의 최댓값
# 첫번째 원소와 두번째 원소 중에서 한 개만 고를 수 있음
# 몇 칸을 띄웠을 때 최댓값을 구할 수 있는지
d[1] = max(array[0], array[1])

for i in range(2, n):
    print(f"i:{i} d:{d}")
    print(d[i - 1])
    print(d[i - 2])
    print(array[i])
    # 최소 한칸 띄고 약탈해야함 = i-3은 안해도 ok => 항상 털 수 있으므로
    # 현재 위치에 대한 식량의 값 array[i]
    d[i] = max(d[i - 1], d[i - 2] + array[i])
    print(d)
print(d[n - 1])